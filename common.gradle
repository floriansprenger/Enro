def versionProperties = new Properties()
versionProperties.load(new FileInputStream(rootProject.file("version.properties")))

ext.androidLibrary = {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-parcelize'

    android {
        compileSdkVersion 30

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 30
            versionCode versionProperties.getProperty("versionCode").toInteger()
            versionName versionProperties.getProperty("versionName")

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles "consumer-rules.pro"
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
        buildFeatures {
            buildConfig = false
            viewBinding = true
        }
    }

    kotlin {
        explicitApi()
    }

    dependencies {
        implementation deps.kotlin.stdLib
    }
}

ext.useCompose = {
    apply plugin: "org.jetbrains.compose"

    android {
        kotlinOptions {
            useIR = true
        }
    }

    dependencies {
        implementation deps.compose.compiler
        implementation deps.compose.foundationLayout
        implementation deps.compose.ui
        implementation deps.compose.runtime
        implementation deps.compose.viewmodel
        implementation deps.compose.livedata
        implementation deps.compose.activity
    }
}